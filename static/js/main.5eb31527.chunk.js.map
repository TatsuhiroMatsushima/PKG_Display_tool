{"version":3,"sources":["components/Afalse.js","components/Boadm.js","components/Dsm.js","components/Dsmresult.js","components/Pages.js","components/Ptm.js","components/Pts.js","components/Top.js","components/Button.js","components/Normal.js","components/Sig.js","components/Lhsd.js","App.js","serviceWorker.js","index.js"],"names":["Afalse","Boadm","Dsm","React","useState","pkgName","number","blockNumber","ifNumber","inputs","setVals","modalIsOpen","setIsOpen","openModal","alert","block","Math","floor","ifnumber","calculationHilight","closeModal","done","map","pkg","className","key","type","value","id","onClick","i","Button","handleInputNumberChange","Number","numberInit","isOpen","onRequestClose","contentLabel","Dsmresult","to","props","Result","Normal","chNumber","Sig","Lhsd","Pages","Pts","Top","Modal","setAppElement","objects","Array","v","ch","if","object","random","style","background","ifsSig","ifs","ifsLhsd","App","exact","path","component","Ptm","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5eb31527.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Afalse() {\nreturn(\n    <div>\n        <h1>Afalse</h1>\n        <p></p>\n    </div>\n)\n}","import React from 'react'\n\nexport default function Boadm() {\nreturn(\n    <div>\n        <h1>BOADM</h1>\n        <p>準備中</p>\n    </div>\n)\n}","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport Modal from 'react-modal'\nimport { Dsmresult, Button } from './index';\nModal.setAppElement('#root')\nexport default function Dsm() {\n    // PKG選択ボタン用配列\n    const pkgs = ([\n        { pkgName: 'VFCHP', done: false, number: 0 },\n        { pkgName: 'VT-1', done: false, number: 1 },\n        { pkgName: 'EQL', done: false, number: 2 },\n        { pkgName: '64kIF', done: false, number: 3 },\n        { pkgName: 'OCU-5', done: false, number: 4 },\n        { pkgName: 'VT-2', done: false, number: 5 },\n        { pkgName: 'VT-3', done: false, number: 6 },\n        { pkgName: 'SIG', done: false, number: 7 },\n        { pkgName: 'LHSD', done: false, number: 8 },\n    ]);\n\n    // PKGとCHの入力管理\n    const [inputs, setVals] = React.useState(\n        { pkgName: '', number: '', blockNumber: '', ifNumber: '' }\n    );\n    // モーダル管理\n    const [modalIsOpen, setIsOpen] = React.useState(false);\n    // inputsのpkgnameにPKG名を反映\n    const handleNameChange = i => setVals({ ...inputs, pkgName: i });\n    // inputsのchnumberにch数を反映\n    const handleInputNumberChange = i => {\n        setVals({ ...inputs, number: Number(inputs.number + i) });\n    }\n    // chnumber初期化\n    const numberInit = () => {\n        setVals({ ...inputs, number: \"\" });\n    }\n\n    // 検索ボタン\n    const calculationHilight = () => {\n        // console.log(inputs.chNumber)\n        if (!inputs.pkgName) {\n            alert('PKGを選択してください')\n        }\n        else if (inputs.number > 96 || !inputs.number) {\n            alert('正しいCH番号を入れてください')\n        }\n        else {\n            // 計算部分\n            let block = Math.floor(inputs.number / 16.1)\n            let ifnumber = inputs.number - block * 16\n            setVals({ ...inputs, blockNumber: block + 1, ifNumber: ifnumber })\n            // モーダルを開く\n            // setIsOpen(true);\n        }\n    }\n\n    //モーダルテスト\n\n    function openModal() {\n        calculationHilight();\n        setIsOpen(true);\n    }\n    function closeModal() {\n        setIsOpen(false);\n    }\n\n    return (\n        <div>\n            <h1>DSM</h1>\n            <p>\bこのコンポーネントにツールを書く</p>\n            <h2>PKGを入力してください</h2>\n            <p>\n                {/* PKG選択ボタン生成 */}\n                {pkgs.map(pkg => (\n                    <label className=\"panel-block\" key={pkg.pkgName}>\n                        <input\n                            type='button'\n                            value={pkg.pkgName}\n                            id={`pkg${pkg.number}`}\n                            onClick={() => { handleNameChange(`${pkg.pkgName}`); }}\n                        />\n                    </label>\n                ))}\n            </p>\n            <h3>PKG：{inputs.pkgName}</h3>\n            <h2>CHを入力してください</h2>\n            <Button handleInputNumberChange={handleInputNumberChange} numberInit={numberInit} />\n            <h3>CH：{inputs.number}</h3>\n            <input type=\"button\" value=\"モーダル表示 検索\" className=\"mr-2\" id=\"calculation\" onClick={() => { openModal() }} />\n            <Modal\n                isOpen={modalIsOpen}\n                onRequestClose={() => { closeModal() }}\n                contentLabel=\"Example Modal\"\n            >\n                <input type=\"button\" value=\"閉じる\" className=\"mr-2\" onClick={() => { closeModal() }} />\n                <Dsmresult blockNumber={inputs.blockNumber} ifNumber={inputs.ifNumber} pkgName={inputs.pkgName} number={inputs.number} />\n            </Modal>\n            <Link to=\"/Afalse\">Appのfがtrueの時、/にリダイレクト</Link>\n            {/* <Dsmresult blockNumber={inputs.blockNumber} ifNumber={inputs.ifNumber} pkgName={inputs.pkgName} number={inputs.number}/> */}\n        </div>\n    )\n}\n","import React from 'react'\nimport { Normal, Sig, Lhsd } from './index'\n\nexport default function Dsmresult(props) {\n    const Result = () => {\n        switch (props.pkgName) {\n            case \"VFCHP\":\n            case \"VT-1\":\n            case \"EQL\":\n            case \"64kIF\":\n            case \"OCU-5\":\n                return <Normal chNumber={props.number} />\n            case \"SIG\":\n            case \"VT-2\":\n            case \"VT-3\":\n                return <Sig chNumber={props.number} />\n            case \"LHSD\":\n                return <Lhsd chNumber={props.number} />\n            default:\n                return <div>PKG未選択</div>\n        }\n    }\n    return (\n        <div>\n            <h1>検索結果</h1>\n            <p>BLOCK:{props.blockNumber}</p>\n            <p>IF:{props.ifNumber}</p>\n            {props.pkgName}\n            <Result />\n        </div>\n    )\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function Pages() {\n\n\n\n    return (\n        <div>\n            <h1>Pages</h1>\n            <p><Link to=\"/\">Topページに戻る</Link></p>\n            <p><Link to=\"/dsm\">DSM CH-P特定ツール</Link></p>\n            <p><Link to=\"/boadm\">BOADM 場所特定ツール</Link></p>\n            <p><Link to=\"/pts\">PTS 場所特定ツール</Link></p>\n            <p><Link to=\"/ptm\">PTM 場所特定ツール</Link></p>\n        </div>\n    )\n}","import React from 'react'\n\nexport default function Pts() {\nreturn(\n    <div>\n        <h1>PTM</h1>\n        <p>準備中</p>\n    </div>\n)\n}","import React from 'react'\n\nexport default function Pts() {\nreturn(\n    <div>\n        <h1>PTS</h1>\n        <p>準備中</p>\n    </div>\n)\n}","import React from 'react'\n\nexport default function Top() {\nreturn(\n    <div>\n        <h1>Top</h1>\n        <p>各種装置のPKG搭載位置を表示するアプリ</p>\n        <p>IEはサポートしていません</p>\n    </div>\n)\n}","import React from 'react'\n\nexport default function Button(props) {\n    const inputNumbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n    return (\n        <div>\n            <h1>Button</h1>\n            <p>\n                {/* 入力ボタン生成  */}\n                {inputNumbers.map(number => (\n                    <label className=\"input-number\" key={number}>\n                        <input\n                            type='button'\n                            value={number}\n                            onClick={() => { props.handleInputNumberChange(`${number}`) }}\n                        />\n                    </label>\n                ))}\n            </p>\n            <input\n                type='button'\n                value='DELETE'\n                onClick={() => { props.numberInit() }}\n            />\n        </div>\n    )\n}","import React from 'react'\n\nexport default function Normal(props) {\n    const test = [...Array(96)].map((v, i) => i + 1)\n    const objects = test.map(i => ({ ch: i, if: i - Math.floor(i / 16.1) * 16, block: Math.floor(i / 16.1) }))\n\n    return (\n        <div>\n            <h1>NormalType</h1>\n            <div>\n                <h2 >normalType</h2>\n                {objects.map(object => (\n                    <p key={Math.random()} className={object.ch} style={object.ch === props.chNumber ? { background: \"green\" } : {}} >{object.if}</p>\n                ))}\n            </div>\n        </div>\n    )\n}","import React from 'react'\n\nexport default function Sig(props) {\n    const ifsSig = [1, 2, 5, 6, 9, 10, 13, 14]\n    return (\n        <div>\n            <h1>SigType</h1>\n            <div className=\"if Sig\" >\n                <h2>SigType</h2>\n                {ifsSig.map(ifs => (\n                    <p key={Math.random()} className={ifs} style={ifs === props.chNumber ? { background: \"green\" } : {}}>{ifs}</p>\n                ))}\n                {ifsSig.map(ifs => (\n                    <p key={Math.random()} className={ifs + 16} style={ifs + 16 === props.chNumber ? { background: \"green\" } : {}}>{ifs}</p>\n                ))}\n                {ifsSig.map(ifs => (\n                    <p key={Math.random()} className={ifs + 32} style={ifs + 32 === props.chNumber ? { background: \"green\" } : {}}>{ifs}</p>\n                ))}\n                {ifsSig.map(ifs => (\n                    <p key={Math.random()} className={ifs + 48} style={ifs + 48 === props.chNumber ? { background: \"green\" } : {}}>{ifs}</p>\n                ))}\n                {ifsSig.map(ifs => (\n                    <p key={Math.random()} className={ifs + 64} style={ifs + 64 === props.chNumber ? { background: \"green\" } : {}}>{ifs}</p>\n                ))}\n                {ifsSig.map(ifs => (\n                    <p key={Math.random()} className={ifs + 80} style={ifs + 80 === props.chNumber ? { background: \"green\" } : {}}>{ifs}</p>\n                ))}\n            </div>\n        </div>\n    )\n}","import React from 'react'\n\nexport default function Lhsd(props) {\n    const ifsLhsd = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    return (\n        <div>\n            <h1>LhsdType</h1>\n            <h2 >LhsdType</h2>\n            <div className=\"if Lhsd\" >\n                <h2>lhsd</h2>\n                {ifsLhsd.map(ifs => (\n                    <p key={Math.random()} className={ifs} style={ifs  === props.chNumber ? { background: \"green\" } : {}} > {ifs}</p>\n                ))}\n                {ifsLhsd.map(ifs => (\n                    <p key={Math.random()} className={ifs + 16} style={ifs + 16 === props.chNumber ? { background: \"green\" } : {}}>{ifs}</p>\n                ))}\n                {ifsLhsd.map(ifs => (\n                    <p key={Math.random()} className={ifs + 32} style={ifs + 32 === props.chNumber ? { background: \"green\" } : {}}>{ifs}</p>\n                ))}\n                {ifsLhsd.map(ifs => (\n                    <p key={Math.random()} className={ifs + 48} style={ifs + 48 === props.chNumber ? { background: \"green\" } : {}}>{ifs}</p>\n                ))}\n                {ifsLhsd.map(ifs => (\n                    <p key={Math.random()} className={ifs + 64} style={ifs + 64 === props.chNumber ? { background: \"green\" } : {}}>{ifs}</p>\n                ))}\n                {ifsLhsd.map(ifs => (\n                    <p key={Math.random()} className={ifs + 80} style={ifs + 80 === props.chNumber ? { background: \"green\" } : {}}>{ifs}</p>\n                ))}\n            </div>\n        </div >\n    )\n}","import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport './assets/styles/App.css';\nimport { Afalse, Boadm, Dsm, Pages, Ptm, Pts, Top } from './components/index'\n\nexport default function App() {\n\n  const f = false\n  return (\n    <Router>\n      <div>\n        <Pages /><hr />\n        <Route exact path='/' component={Top} />\n        <Route exact path='/dsm' component={Dsm} />\n        <Route exact path='/boadm' component={Boadm} />\n        <Route exact path='/pts' component={Pts} />\n        <Route exact path='/ptm' component={Ptm} />\n        <Route exact path=\"/Afalse\">\n          {/* fがtrueの時？ falseの時: */}\n          {f ? <Redirect to=\"/\" /> : <Afalse />}\n        </Route>\n        {/* <Route exact path=\"/dsm/result\" component={Dsmresult}/> */}\n        <hr />\n      </div>\n    </Router>\n  );\n  \n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}