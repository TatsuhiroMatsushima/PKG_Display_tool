{"version":3,"sources":["components/Boadm.js","components/Dsm.js","components/Dsmresult.js","components/Boadmresult.js","components/Menu.js","components/Ptm.js","components/Pts.js","components/Button.js","components/Delete.js","components/Normal.js","components/Sig.js","components/Lhsd.js","components/BoadmWidth1.js","components/BoadmWidth2.js","components/BoadmWidth3.js","App.js","serviceWorker.js","index.js"],"names":["Boadm","React","useState","pkgName","number1","number2","number3","inputs","setInputs","baySelect","setBayselect","unitSelect","setUnitselect","modalIsOpen","setIsOpen","closeModal","map","pkg","className","key","type","value","onClick","i","style","background","Button","handleInputNumberChange","Number","Delete","numberInit","id","inputsConfirmation","alert","calculationHilight","isOpen","onRequestClose","contentLabel","Boadmresult","bay","unit","slot","Dsm","number","blockNumber","ifNumber","setVals","block","Math","floor","ifnumber","Dsmresult","props","Result","Normal","chNumber","Sig","Lhsd","BoadmWidth1","BoadmWidth2","BoadmWidth3","Menu","to","Pts","ifsNormal","ifs","random","ifsSig","ifsLhsd","boadmslot","slots","App","basename","process","exact","path","component","Ptm","Modal","setAppElement","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bac20a67.chunk.js","sourcesContent":["import React from 'react'\nimport Modal from 'react-modal'\nimport { Boadmresult, Button, Delete } from './index';\nModal.setAppElement('#root')\nexport default function Boadm() {\n    // PKG選択ボタン用配列\n    const pkgs = ['TRXA', 'XGBERF', 'GMXF64', 'TPF64', 'SCRM', 'OSC', 'OCM', 'DWS', 'DCF', 'SCIF3', 'FUN', 'EXBUS']\n\n    // PKGとCHの入力管理\n    const [inputs, setInputs] = React.useState(\n        { pkgName: '', number1: '', number2: '', number3: '' }\n    );\n\n    const [baySelect, setBayselect] = React.useState('')\n    const [unitSelect, setUnitselect] = React.useState('')\n\n\n    // const [outputs,s]\n    // モーダル管理\n    const [modalIsOpen, setIsOpen] = React.useState(false);\n\n    // inputsのpkgnameにPKG名を反映\n    const handleNameChange = i => setInputs({ ...inputs, pkgName: i });\n\n    // inputsのnumber1に入力を反映\n    const handleInputNumber1Change = i => {\n        setInputs({ ...inputs, number1: Number(inputs.number1 + i) });\n    }\n\n    // inputsのnumber2に入力を反映\n    const handleInputNumber2Change = i => {\n        setInputs({ ...inputs, number2: Number(inputs.number2 + i) });\n    }\n\n    // inputsのnumber3に入力を反映\n    const handleInputNumber3Change = i => {\n        setInputs({ ...inputs, number3: Number(inputs.number3 + i) });\n    }\n\n    // number初期化\n    const number1Init = () => {\n        setInputs({ ...inputs, number1: '' });\n    }\n    // number初期化\n    const number2Init = () => {\n        setInputs({ ...inputs, number2: '' });\n    }\n    // number初期化\n    const number3Init = () => {\n        setInputs({ ...inputs, number3: '' });\n    }\n\n    // 検索ボタン\n    const calculationHilight = () => {\n\n        // 入力に問題が無いか管理する変数\n        let inputsConfirmation = true\n\n        // PKG入力を管理\n        if (!inputs.pkgName) {\n            inputsConfirmation = false\n            alert('PKGを選択してください')\n        }\n\n        // 架入力を管理\n        switch (inputs.number1) {\n            case 1:\n                setBayselect('基本架')\n                // setIsOpen(true);\n                break\n            case 2:\n                setBayselect('増設架')\n                // setIsOpen(true);\n                break\n            default:\n                setBayselect('')\n                inputsConfirmation = false\n                alert('正しい情報を入力してください1')\n                break\n        }\n\n        // ユニット入力を管理\n        switch (inputs.number2) {\n            case 1:\n                setUnitselect('1')\n                // setIsOpen(true);\n                break\n            case 2:\n                setUnitselect('2')\n                // setIsOpen(true);\n                break\n            default:\n                setUnitselect('')\n                inputsConfirmation = false\n                alert('正しい情報を入力してください2')\n                break\n        }\n\n        // スロット入力を管理\n        if (!inputs.number3 || inputs.number3 > 19) {\n            inputsConfirmation = false\n            alert('正しい情報を入力してください3')\n        }\n\n        // console.log(baySelect)\n        // console.log(unitSelect)\n\n        // モーダルを開く\n        if (inputsConfirmation) {\n            setIsOpen(true);\n        }\n\n    }\n\n    function closeModal() {\n        setIsOpen(false);\n    }\n\n    return (\n        <div>\n            <h1>BOADM</h1>\n\n            {/* PKG入力部 */}\n            <h2>PKGを入力してください</h2>\n            <p>\n                {/* PKG選択ボタン生成 */}\n                {pkgs.map(pkg => (\n                    <label className=\"panel-block\" key={pkg}>\n                        <input\n                            type='button'\n                            value={pkg}\n                            onClick={() => { handleNameChange(`${pkg}`); }}\n                        />\n                    </label>\n                ))}\n            </p>\n            {/* 入力が無い時、背景をハイライト */}\n            <h3 style={inputs.pkgName === '' ? { background: \"red\" } : {}} >PKG：{inputs.pkgName}</h3>\n\n            {/* 架・ユニット・スロット入力部 */}\n            <h2>トラチケ情報を入力してください</h2>\n            {/* トラチケ入力ボタン */}\n            <Button handleInputNumberChange={handleInputNumber1Change} />\n            <Delete numberInit={number1Init} />\n            <Button handleInputNumberChange={handleInputNumber2Change} />\n            <Delete numberInit={number2Init} />\n            <Button handleInputNumberChange={handleInputNumber3Change} />\n            <Delete numberInit={number3Init} />\n            {/* 削除ボタン */}\n            {/* <Delete numberInit={number1Init} /> */}\n            {/* 入力が無い時、背景をハイライト */}\n            <h3 style={inputs.number1 === '' ? { background: \"red\" } : {}} >{inputs.number1}-{inputs.number2}-{inputs.number3}</h3>\n\n            {/* 変換・モーダル起動部 */}\n            {/* 検索ボタン */}\n            <input type=\"button\" value=\"検索\" className=\"mr-2\" id=\"calculation\" onClick={() => { calculationHilight() }} />\n            <Modal\n                isOpen={modalIsOpen}\n                onRequestClose={() => { closeModal() }}\n                contentLabel=\"Modal\"\n            >\n                <input type=\"button\" value=\"閉じる\" className=\"mr-2\" onClick={() => { closeModal() }} />\n                {/* 結果呼び出し部 */}\n                <Boadmresult bay={baySelect} unit={unitSelect} pkgName={inputs.pkgName} slot={inputs.number3} />\n            </Modal>\n\n        </div>\n    )\n}","import React from 'react'\n// import { Link } from 'react-router-dom';\nimport Modal from 'react-modal'\nimport { Dsmresult, Button, Delete } from './index';\nModal.setAppElement('#root')\nexport default function Dsm() {\n    // PKG選択ボタン用配列\n    const pkgs = ['VFCHP', 'VT-1', 'EQL', '64kIF', 'OCU-5', 'VT-2', 'VT-3', 'SIG', 'LHSD']\n\n    // PKGとCHの入力管理\n    const [inputs, setVals] = React.useState(\n        { pkgName: '', number: '', blockNumber: '', ifNumber: '' }\n    );\n    // モーダル管理\n    const [modalIsOpen, setIsOpen] = React.useState(false);\n    // inputsのpkgnameにPKG名を反映\n    const handleNameChange = i => setVals({ ...inputs, pkgName: i });\n    // inputsのchnumberにch数を反映\n    const handleInputNumberChange = i => {\n        setVals({ ...inputs, number: Number(inputs.number + i) });\n    }\n    // chnumber初期化\n    const numberInit = () => {\n        setVals({ ...inputs, number: \"\" });\n    }\n\n    // 検索ボタン\n    const calculationHilight = () => {\n        // console.log(inputs.chNumber)\n        if (!inputs.pkgName) {\n            alert('PKGを選択してください')\n        }\n        else if (inputs.number > 96 || !inputs.number) {\n            alert('正しいCH番号を入れてください')\n        }\n        else {\n            // 計算部分\n            let block = Math.floor(inputs.number / 16.1)\n            let ifnumber = inputs.number - block * 16\n            setVals({ ...inputs, blockNumber: block + 1, ifNumber: ifnumber })\n            // モーダルを開く\n            switch (inputs.pkgName) {\n                case \"VFCHP\":\n                case \"VT-1\":\n                case \"EQL\":\n                case \"64kIF\":\n                case \"OCU-5\":\n                    setIsOpen(true);\n                    break\n                case \"SIG\":\n                case \"VT-2\":\n                case \"VT-3\":\n                    if (ifnumber % 4 === 0 || ifnumber === 3 || ifnumber === 7 || ifnumber === 11 || ifnumber === 15 || ifnumber === 16) {\n                        alert('正しいCH番号を入れてください')\n                    }\n                    else { setIsOpen(true); }\n                    break\n                case \"LHSD\":\n                    if (ifnumber > 9) {\n                        alert('正しいCH番号を入れてください')\n                    }\n                    else { setIsOpen(true); }\n                    break\n                default:\n                    alert('想定外の動作が起きました')\n                    break\n            }\n        }\n    }\n\n    function closeModal() {\n        setIsOpen(false);\n    }\n\n    return (\n        <div>\n            <h1>DSM</h1>\n            <h2>PKGを入力してください</h2>\n            <p>\n                {/* PKG選択ボタン生成 */}\n                {pkgs.map(pkg => (\n                    <label className=\"panel-block\" key={pkg}>\n                        <input\n                            type='button'\n                            value={pkg}\n                            onClick={() => { handleNameChange(`${pkg}`); }}\n                        />\n                    </label>\n                ))}\n            </p>\n\n            <h3 style={inputs.pkgName === \"\" ? { background: \"red\" } : {}} >PKG：{inputs.pkgName}</h3>\n            <h2>CHを入力してください</h2>\n\n            <Button handleInputNumberChange={handleInputNumberChange} />\n            <Delete numberInit={numberInit} />\n\n            <h3 style={inputs.number === \"\" ? { background: \"red\" } : {}} >CH：{inputs.number}</h3>\n            <input type=\"button\" value=\"検索\" className=\"mr-2\" id=\"calculation\" onClick={() => { calculationHilight() }} />\n            <Modal\n                isOpen={modalIsOpen}\n                onRequestClose={() => { closeModal() }}\n                contentLabel=\"Modal\"\n            >\n                <input type=\"button\" value=\"閉じる\" className=\"mr-2\" onClick={() => { closeModal() }} />\n                <Dsmresult blockNumber={inputs.blockNumber} ifNumber={inputs.ifNumber} pkgName={inputs.pkgName} number={inputs.number} />\n            </Modal>\n\n        </div>\n    )\n}","import React from 'react'\nimport { Normal, Sig, Lhsd } from './index'\n\nexport default function Dsmresult(props) {\n   const Result = () => {\n       switch (props.pkgName) {\n           case \"VFCHP\":\n           case \"VT-1\":\n           case \"EQL\":\n           case \"64kIF\":\n           case \"OCU-5\":\n               return <Normal chNumber={props.number} />\n           case \"SIG\":\n           case \"VT-2\":\n           case \"VT-3\":\n               return <Sig chNumber={props.number} />\n           case \"LHSD\":\n               return <Lhsd chNumber={props.number} />\n           default:\n               return <div>PKG未選択</div>\n       }\n   }\n   return (\n       <div className=\"dsmResult\">\n           <h2>PKG:{props.pkgName}</h2>\n           <h2>CH:{props.number}</h2>\n           <h2>BLOCK:{props.blockNumber}</h2>\n           <h2>IF:{props.ifNumber}</h2>\n           <Result />\n       </div>\n   )\n}","import React from 'react'\nimport { BoadmWidth1,BoadmWidth2,BoadmWidth3 } from './index'\n\nexport default function Boadmresult(props) {\n   const Result = () => {\n       switch (props.pkgName) {\n           // XGBERFとか\n           case \"XGBERF\":\n           case \"TPF64\":\n           case \"SCRM\":\n           case \"OSC\":\n           case \"OCM\":\n           case \"OCME\":\n           case \"SCIF3\":\n           case \"EXBUS\":\n               // 一枚幅の描画を呼び出す\n               return <BoadmWidth1 slot={props.slot}  />\n\n           // TRXAとか\n           case \"TRXA\":\n           case \"GMXF64\":\n           case \"DWS\":\n               // 2枚幅の描画を呼び出す\n               return <BoadmWidth2 slot={props.slot} />\n\n           // DCFとか\n           case \"DCF\":\n               // 三枚幅の描画を呼び出す\n               return <BoadmWidth3 slot={props.slot} />\n\n           // PKGが選択されていないときの挙動\n           default:\n               return <div>PKG未選択</div>\n       }\n   }\n   return (\n       <div className=\"boadm-result\">\n           <h2>PKG:{props.pkgName}</h2>\n           <h2>架タイプ:{props.bay}</h2>\n           <h2>UNIT:{props.unit}</h2>\n           <h2>SLOT:{props.slot}</h2>\n           <Result />\n       </div>\n   )\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function Menu() {\n    return (\n        <div>\n            <h1><Link to=\"/\">MainMenu</Link></h1>\n            {/* <h2>ページ更新をするとエラーになります!!!</h2> */}\n            <div>\n                <p>トラチケ情報を入力し、各種装置のPKG搭載位置を表示するツール</p>\n                <p>先行版としてDSMのPKG表示機能を実装</p>\n            </div>\n            {/* <p><Link to=\"/\">Top</Link></p> */}\n            <p><Link to=\"/dsm\">DSM CH-P特定ツール</Link></p>\n            <p><Link to=\"/boadm\">BOADM 場所特定ツール（準備中）</Link></p>\n            {/* <p><Link to=\"/pts\">PTS 場所特定ツール（準備中）</Link></p> */}\n            {/* <p><Link to=\"/ptm\">PTM 場所特定ツール（準備中）</Link></p> */}\n        </div>\n    )\n}","import React from 'react'\n\nexport default function Pts() {\nreturn(\n    <div>\n        <h1>PTM</h1>\n        <p>準備中</p>\n    </div>\n)\n}","import React from 'react'\n\nexport default function Pts() {\nreturn(\n    <div>\n        <h1>PTS</h1>\n        <p>準備中</p>\n    </div>\n)\n}","import React from 'react'\n\nexport default function Button(props) {\n   const inputNumbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n   return (\n       <div>\n           <p>\n               {/* 入力ボタン生成  */}\n               {inputNumbers.map(number => (\n                   <label className=\"input-number\" key={number}>\n                       <input\n                           type='button'\n                           value={number}\n                           onClick={() => { props.handleInputNumberChange(`${number}`) }}\n                       />\n                   </label>\n               ))}\n           </p>\n       </div>\n   )\n}","import React from 'react'\n\nexport default function Delete(props) {\n    return (\n        <div>\n            <input\n                type='button'\n                value='DELETE'\n                onClick={() => { props.numberInit() }}\n            />\n        </div>\n    )\n}","import React from 'react'\n\nexport default function Normal(props) {\n    const ifsNormal = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]\n\n    return (\n        <div>\n            <h1>NormalType</h1>\n            <div className=\"if Normal\">\n                <div >\n                    <h2 className=\"blockName\">BLOCK1</h2>\n                    <div className=\"block\">\n                        {ifsNormal.map(ifs => (\n                            <p key={Math.random()} className=\"chNormal\" style={ifs === props.chNumber ? { background: \"red\" } : {}} >{ifs}</p>\n                        ))}\n                    </div>\n                </div>\n                <div >\n                    <h2 className=\"blockName\">BLOCK2</h2>\n                    <div className=\"block\">\n                        {ifsNormal.map(ifs => (\n                            <p key={Math.random()} className=\"chNormal\" style={ifs + 16 === props.chNumber ? { background: \"red\" } : {}} >{ifs}</p>\n                        ))}\n                    </div>\n                </div>\n                <div>\n                    <h2 className=\"blockName\">BLOCK3</h2>\n                    <div className=\"block\">\n                        {ifsNormal.map(ifs => (\n                            <p key={Math.random()} className=\"chNormal\" style={ifs + 32 === props.chNumber ? { background: \"red\" } : {}} >{ifs}</p>\n                        ))}\n                    </div>\n                </div>\n\n                <div>\n                    <h2 className=\"blockName\">BLOCK4</h2>\n                    <div className=\"block\">\n                        {ifsNormal.map(ifs => (\n                            <p key={Math.random()} className=\"chNormal\" style={ifs + 48 === props.chNumber ? { background: \"red\" } : {}} >{ifs}</p>\n                        ))}\n                    </div>\n                </div>\n                <div>\n                    <h2 className=\"blockName\">BLOCK5</h2>\n                    <div className=\"block\">\n                        {ifsNormal.map(ifs => (\n                            <p key={Math.random()} className=\"chNormal\" style={ifs + 64 === props.chNumber ? { background: \"red\" } : {}} >{ifs}</p>\n                        ))}\n                    </div>\n                </div>\n                <div>\n                    <h2 className=\"blockName\">BLOCK6</h2>\n                    <div className=\"block\">\n                        {ifsNormal.map(ifs => (\n                            <p key={Math.random()} className=\"chNormal\" style={ifs + 80 === props.chNumber ? { background: \"red\" } : {}} >{ifs}</p>\n                        ))}\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    )\n}","import React from 'react'\n\nexport default function Sig(props) {\n    const ifsSig = [1, 2, 5, 6, 9, 10, 13, 14]\n    return (\n        <div>\n            <h1>SigType</h1>\n            <div className=\"if Sig\" >\n                <div >\n                    <h2 className=\"blockName\">BLOCK1</h2>\n                    <div className=\"block\">\n                        {ifsSig.map(ifs => (\n                            <p key={Math.random()} className=\"chSig\" style={ifs === props.chNumber ? { background: \"red\" } : {}} >{ifs}</p>\n                        ))}\n                    </div>\n                </div>\n                <div >\n                    <h2 className=\"blockName\">BLOCK2</h2>\n                    <div className=\"block\">\n                        {ifsSig.map(ifs => (\n                            <p key={Math.random()} className=\"chSig\" style={ifs + 16 === props.chNumber ? { background: \"red\" } : {}} >{ifs}</p>\n                        ))}\n                    </div>\n                </div>\n                <div>\n                    <h2 className=\"blockName\">BLOCK3</h2>\n                    <div className=\"block\">\n                        {ifsSig.map(ifs => (\n                            <p key={Math.random()} className=\"chSig\" style={ifs + 32 === props.chNumber ? { background: \"red\" } : {}} >{ifs}</p>\n                        ))}\n                    </div>\n                </div>\n\n                <div>\n                    <h2 className=\"blockName\">BLOCK4</h2>\n                    <div className=\"block\">\n                        {ifsSig.map(ifs => (\n                            <p key={Math.random()} className=\"chSig\" style={ifs + 48 === props.chNumber ? { background: \"red\" } : {}} >{ifs}</p>\n                        ))}\n                    </div>\n                </div>\n                <div>\n                    <h2 className=\"blockName\">BLOCK5</h2>\n                    <div className=\"block\">\n                        {ifsSig.map(ifs => (\n                            <p key={Math.random()} className=\"chSig\" style={ifs + 64 === props.chNumber ? { background: \"red\" } : {}} >{ifs}</p>\n                        ))}\n                    </div>\n                </div>\n                <div>\n                    <h2 className=\"blockName\">BLOCK6</h2>\n                    <div className=\"block\">\n                        {ifsSig.map(ifs => (\n                            <p key={Math.random()} className=\"chSig\" style={ifs + 80 === props.chNumber ? { background: \"red\" } : {}} >{ifs}</p>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react'\n\nexport default function Lhsd(props) {\n    const ifsLhsd = [1, 2, 3, 4, 5, 6, 7, 8, 9, \"\", \"\", \"\"]\n    return (\n        <div>\n            <h1>LhsdType</h1>\n            <div className=\"if Lhsd\" >\n                <div >\n                    <h2 className=\"blockName\">BLOCK1</h2>\n                    <div className=\"block\">\n                        {ifsLhsd.map(ifs => (\n                            <p key={Math.random()} className=\"chLhsd\" style={ifs === props.chNumber ? { background: \"red\" } : {}} >{ifs}</p>\n                        ))}\n                    </div>\n                </div>\n                <div >\n                    <h2 className=\"blockName\">BLOCK2</h2>\n                    <div className=\"block\">\n                        {ifsLhsd.map(ifs => (\n                            <p key={Math.random()} className=\"chLhsd\" style={ifs + 16 === props.chNumber ? { background: \"red\" } : {}} >{ifs}</p>\n                        ))}\n                    </div>\n                </div>\n                <div>\n                    <h2 className=\"blockName\">BLOCK3</h2>\n                    <div className=\"block\">\n                        {ifsLhsd.map(ifs => (\n                            <p key={Math.random()} className=\"chLhsd\" style={ifs + 32 === props.chNumber ? { background: \"red\" } : {}} >{ifs}</p>\n                        ))}\n                    </div>\n                </div>\n\n                <div>\n                    <h2 className=\"blockName\">BLOCK4</h2>\n                    <div className=\"block\">\n                        {ifsLhsd.map(ifs => (\n                            <p key={Math.random()} className=\"chLhsd\" style={ifs + 48 === props.chNumber ? { background: \"red\" } : {}} >{ifs}</p>\n                        ))}\n                    </div>\n                </div>\n                <div>\n                    <h2 className=\"blockName\">BLOCK5</h2>\n                    <div className=\"block\">\n                        {ifsLhsd.map(ifs => (\n                            <p key={Math.random()} className=\"chLhsd\" style={ifs + 64 === props.chNumber ? { background: \"red\" } : {}} >{ifs}</p>\n                        ))}\n                    </div>\n                </div>\n                <div>\n                    <h2 className=\"blockName\">BLOCK6</h2>\n                    <div className=\"block\">\n                        {ifsLhsd.map(ifs => (\n                            <p key={Math.random()} className=\"chLhsd\" style={ifs + 80 === props.chNumber ? { background: \"red\" } : {}} >{ifs}</p>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </div >\n    )\n}","import React from 'react'\n\nexport default function BoadmWidth1(props) {\n   const boadmslot = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]\n\n   return (\n       <div>\n           <h1>Width1</h1>\n           <div className=\"boadm-unit boadm-width1\">\n               <div className=\"boadm-slot-frame\">\n                   <div className=\"boadm-fan-frame\">\n                       <div className=\"boadm-fan\">FAN(1)</div>\n                       <div className=\"boadm-fan\">FAN(2)</div>\n                       <div className=\"boadm-fan\">FAN(3)</div>\n                   </div>\n                   {/* <h2>frame</h2> */}\n                   <div className=\"boadm-slot-name-frame\">\n                       {boadmslot.map(slots => (\n                           <div key={Math.random()} className=\"boadm-slot-name\"  >{slots}</div>\n                       ))}\n                   </div>\n                   <div className=\"boadm-slot\">\n                       {boadmslot.map(slots => (\n                           <div key={Math.random()} className=\"boadm-slot-pkg\" id={slots} style={slots === props.slot ? { background: \"red\" } : {}} ></div>\n                       ))}\n                   </div>\n               </div>\n\n           </div>\n       </div>\n   )\n}","import React from 'react'\n\nexport default function BoadmWidth2(props) {\n   const boadmslot = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]\n\n   return (\n       <div>\n           <h1>Width1</h1>\n           <div className=\"boadm-unit boadm-width1\">\n               <div className=\"boadm-slot-frame\">\n                   <div className=\"boadm-fan-frame\">\n                       <div className=\"boadm-fan\">FAN(1)</div>\n                       <div className=\"boadm-fan\">FAN(2)</div>\n                       <div className=\"boadm-fan\">FAN(3)</div>\n                   </div>\n                   {/* <h2>frame</h2> */}\n                   <div className=\"boadm-slot-name-frame\">\n                       {boadmslot.map(slots => (\n                           <div key={Math.random()} className=\"boadm-slot-name\"  >{slots}</div>\n                       ))}\n                   </div>\n                   <div className=\"boadm-slot\">\n                       {boadmslot.map(slots => (\n                           <div key={Math.random()} className=\"boadm-slot-pkg\" id={slots} style={slots === props.slot || slots === props.slot - 1 ? { background: \"red\" } : {}} ></div>\n                       ))}\n                   </div>\n\n               </div>\n\n           </div>\n       </div>\n   )\n}","import React from 'react'\n\nexport default function BoadmWidth3(props) {\n   const boadmslot = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]\n\n   return (\n       <div>\n           <h1>Width1</h1>\n           <div className=\"boadm-unit boadm-width1\">\n               <div className=\"boadm-slot-frame\">\n                   <div className=\"boadm-fan-frame\">\n                       <div className=\"boadm-fan\">FAN(1)</div>\n                       <div className=\"boadm-fan\">FAN(2)</div>\n                       <div className=\"boadm-fan\">FAN(3)</div>\n                   </div>\n                   {/* <h2>frame</h2> */}\n                   <div className=\"boadm-slot-name-frame\">\n                       {boadmslot.map(slots => (\n                           <div key={Math.random()} className=\"boadm-slot-name\"  >{slots}</div>\n                       ))}\n                   </div>\n                   <div className=\"boadm-slot\">\n                       {boadmslot.map(slots => (\n                           <div key={Math.random()} className=\"boadm-slot-pkg\" id={slots} style={slots === props.slot || slots === props.slot - 1 || slots === props.slot - 2 ? { background: \"red\" } : {}} ></div>\n                       ))}\n                   </div>\n\n               </div>\n\n           </div>\n       </div>\n   )\n}","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './assets/styles/App.css';\nimport { Boadm, Dsm, Pages, Ptm, Pts } from './components/index'\n\nexport default function App() {\n\n return (\n   <Router basename={process.env.PUBLIC_URL}>\n     <div>\n       <div className=\"title\">PKG位置表示ツール</div>\n       <Pages /><hr />\n       <Route exact path='/dsm' component={Dsm} />\n       <Route exact path='/boadm' component={Boadm} />\n       <Route exact path='/pts' component={Pts} />\n       <Route exact path='/ptm' component={Ptm} />\n\n       <hr />\n     </div>\n   </Router>\n );\n\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}