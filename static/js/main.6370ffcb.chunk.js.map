{"version":3,"sources":["components/Boadm.js","components/Dsm.js","components/Dsmresult.js","components/Pages.js","components/Ptm.js","components/Pts.js","components/Top.js","components/Button.js","components/Normal.js","components/Sig.js","components/Lhsd.js","App.js","serviceWorker.js","index.js"],"names":["Boadm","Dsm","React","useState","pkgName","number","blockNumber","ifNumber","inputs","setVals","modalIsOpen","setIsOpen","closeModal","done","map","pkg","className","key","type","value","id","onClick","i","Button","handleInputNumberChange","Number","numberInit","alert","block","Math","floor","ifnumber","calculationHilight","isOpen","onRequestClose","contentLabel","Dsmresult","props","Result","Normal","chNumber","Sig","Lhsd","Pages","to","Pts","Top","ifsNormal","ifs","random","style","background","ifsSig","ifsLhsd","App","exact","path","component","Ptm","Modal","setAppElement","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6370ffcb.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Boadm() {\nreturn(\n    <div>\n        <h1>BOADM</h1>\n        <p>準備中</p>\n    </div>\n)\n}","import React from 'react'\n// import { Link } from 'react-router-dom';\nimport Modal from 'react-modal'\nimport { Dsmresult, Button } from './index';\nModal.setAppElement('#root')\nexport default function Dsm() {\n    // PKG選択ボタン用配列\n    const pkgs = ([\n        { pkgName: 'VFCHP', done: false, number: 0 },\n        { pkgName: 'VT-1', done: false, number: 1 },\n        { pkgName: 'EQL', done: false, number: 2 },\n        { pkgName: '64kIF', done: false, number: 3 },\n        { pkgName: 'OCU-5', done: false, number: 4 },\n        { pkgName: 'VT-2', done: false, number: 5 },\n        { pkgName: 'VT-3', done: false, number: 6 },\n        { pkgName: 'SIG', done: false, number: 7 },\n        { pkgName: 'LHSD', done: false, number: 8 },\n    ]);\n\n    // PKGとCHの入力管理\n    const [inputs, setVals] = React.useState(\n        { pkgName: '', number: '', blockNumber: '', ifNumber: '' }\n    );\n    // モーダル管理\n    const [modalIsOpen, setIsOpen] = React.useState(false);\n    // inputsのpkgnameにPKG名を反映\n    const handleNameChange = i => setVals({ ...inputs, pkgName: i });\n    // inputsのchnumberにch数を反映\n    const handleInputNumberChange = i => {\n        setVals({ ...inputs, number: Number(inputs.number + i) });\n    }\n    // chnumber初期化\n    const numberInit = () => {\n        setVals({ ...inputs, number: \"\" });\n    }\n\n    // 検索ボタン\n    const calculationHilight = () => {\n        // console.log(inputs.chNumber)\n        if (!inputs.pkgName) {\n            alert('PKGを選択してください')\n        }\n        else if (inputs.number > 96 || !inputs.number) {\n            alert('正しいCH番号を入れてください')\n        }\n        else {\n            // 計算部分\n            let block = Math.floor(inputs.number / 16.1)\n            let ifnumber = inputs.number - block * 16\n            setVals({ ...inputs, blockNumber: block + 1, ifNumber: ifnumber })\n            // モーダルを開く\n            setIsOpen(true);\n        }\n    }\n\n    function closeModal() {\n        setIsOpen(false);\n    }\n\n    return (\n        <div>\n            <h1>DSM</h1>\n            <h2>PKGを入力してください</h2>\n            <p>\n                {/* PKG選択ボタン生成 */}\n                {pkgs.map(pkg => (\n                    <label className=\"panel-block\" key={pkg.pkgName}>\n                        <input\n                            type='button'\n                            value={pkg.pkgName}\n                            id={`pkg${pkg.number}`}\n                            onClick={() => { handleNameChange(`${pkg.pkgName}`); }}\n                        />\n                    </label>\n                ))}\n            </p>\n            <h3>PKG：{inputs.pkgName}</h3>\n            <h2>CHを入力してください</h2>\n            <Button handleInputNumberChange={handleInputNumberChange} numberInit={numberInit} />\n            <h3>CH：{inputs.number}</h3>\n            <input type=\"button\" value=\"モーダル表示 検索\" className=\"mr-2\" id=\"calculation\" onClick={() => { calculationHilight() }} />\n            <Modal\n                isOpen={modalIsOpen}\n                onRequestClose={() => { closeModal() }}\n                contentLabel=\"Example Modal\"\n            >\n                <input type=\"button\" value=\"閉じる\" className=\"mr-2\" onClick={() => { closeModal() }} />\n                <Dsmresult blockNumber={inputs.blockNumber} ifNumber={inputs.ifNumber} pkgName={inputs.pkgName} number={inputs.number} />\n            </Modal>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { Normal, Sig, Lhsd } from './index'\n\nexport default function Dsmresult(props) {\n    const Result = () => {\n        switch (props.pkgName) {\n            case \"VFCHP\":\n            case \"VT-1\":\n            case \"EQL\":\n            case \"64kIF\":\n            case \"OCU-5\":\n                return <Normal chNumber={props.number} />\n            case \"SIG\":\n            case \"VT-2\":\n            case \"VT-3\":\n                return <Sig chNumber={props.number} />\n            case \"LHSD\":\n                return <Lhsd chNumber={props.number} />\n            default:\n                return <div>PKG未選択</div>\n        }\n    }\n    return (\n        <div className=\"dsmResult\">\n            <h2>PKG:{props.pkgName}</h2>\n            <h2>BLOCK:{props.blockNumber}</h2>\n            <h2>IF:{props.ifNumber}</h2>\n            <Result />\n        </div>\n    )\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function Pages() {\n\n\n\n    return (\n        <div>\n            <h1>Pages</h1>\n            <p><Link to=\"/home\">Topページに戻る</Link></p>\n            <p><Link to=\"/dsm\">DSM CH-P特定ツール</Link></p>\n            <p><Link to=\"/boadm\">BOADM 場所特定ツール</Link></p>\n            <p><Link to=\"/pts\">PTS 場所特定ツール</Link></p>\n            <p><Link to=\"/ptm\">PTM 場所特定ツール</Link></p>\n        </div>\n    )\n}","import React from 'react'\n\nexport default function Pts() {\nreturn(\n    <div>\n        <h1>PTM</h1>\n        <p>準備中</p>\n    </div>\n)\n}","import React from 'react'\n\nexport default function Pts() {\nreturn(\n    <div>\n        <h1>PTS</h1>\n        <p>準備中</p>\n    </div>\n)\n}","import React from 'react'\n\nexport default function Top() {\nreturn(\n    <div>\n        <h1>Top</h1>\n        <p>各種装置のPKG搭載位置を表示するアプリ</p>\n        <p>IEはサポートしていません</p>\n    </div>\n)\n}","import React from 'react'\n\nexport default function Button(props) {\n    const inputNumbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n    return (\n        <div>\n            <h1>Button</h1>\n            <p>\n                {/* 入力ボタン生成  */}\n                {inputNumbers.map(number => (\n                    <label className=\"input-number\" key={number}>\n                        <input\n                            type='button'\n                            value={number}\n                            onClick={() => { props.handleInputNumberChange(`${number}`) }}\n                        />\n                    </label>\n                ))}\n            </p>\n            <input\n                type='button'\n                value='DELETE'\n                onClick={() => { props.numberInit() }}\n            />\n        </div>\n    )\n}","import React from 'react'\n\nexport default function Normal(props) {\n    const ifsNormal = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]\n\n    return (\n        <div>\n            <h1>NormalType</h1>\n            <div className=\"if Normal\">\n                <div >\n                    <h2 className=\"blockName\">BLOCK1</h2>\n                    <div className=\"block\">\n                        {ifsNormal.map(ifs => (\n                            <p key={Math.random()} className=\"chNormal\" style={ifs === props.chNumber ? { background: \"red\" } : {}} >{ifs}</p>\n                        ))}\n                    </div>\n                </div>\n                <div >\n                    <h2 className=\"blockName\">BLOCK2</h2>\n                    <div className=\"block\">\n                        {ifsNormal.map(ifs => (\n                            <p key={Math.random()} className=\"chNormal\" style={ifs + 16 === props.chNumber ? { background: \"red\" } : {}} >{ifs}</p>\n                        ))}\n                    </div>\n                </div>\n                <div>\n                    <h2 className=\"blockName\">BLOCK3</h2>\n                    <div className=\"block\">\n                        {ifsNormal.map(ifs => (\n                            <p key={Math.random()} className=\"chNormal\" style={ifs + 32 === props.chNumber ? { background: \"red\" } : {}} >{ifs}</p>\n                        ))}\n                    </div>\n                </div>\n\n                <div>\n                    <h2 className=\"blockName\">BLOCK4</h2>\n                    <div className=\"block\">\n                        {ifsNormal.map(ifs => (\n                            <p key={Math.random()} className=\"chNormal\" style={ifs + 48 === props.chNumber ? { background: \"red\" } : {}} >{ifs}</p>\n                        ))}\n                    </div>\n                </div>\n                <div>\n                    <h2 className=\"blockName\">BLOCK5</h2>\n                    <div className=\"block\">\n                        {ifsNormal.map(ifs => (\n                            <p key={Math.random()} className=\"chNormal\" style={ifs + 64 === props.chNumber ? { background: \"red\" } : {}} >{ifs}</p>\n                        ))}\n                    </div>\n                </div>\n                <div>\n                    <h2 className=\"blockName\">BLOCK6</h2>\n                    <div className=\"block\">\n                        {ifsNormal.map(ifs => (\n                            <p key={Math.random()} className=\"chNormal\" style={ifs + 80 === props.chNumber ? { background: \"red\" } : {}} >{ifs}</p>\n                        ))}\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    )\n}","import React from 'react'\n\nexport default function Sig(props) {\n    const ifsSig = [1, 2, 5, 6, 9, 10, 13, 14]\n    return (\n        <div>\n            <h1>SigType</h1>\n            <div className=\"if Sig\" >\n                <div >\n                    <h2 className=\"blockName\">BLOCK1</h2>\n                    <div className=\"block\">\n                        {ifsSig.map(ifs => (\n                            <p key={Math.random()} className=\"chSig\" style={ifs === props.chNumber ? { background: \"red\" } : {}} >{ifs}</p>\n                        ))}\n                    </div>\n                </div>\n                <div >\n                    <h2 className=\"blockName\">BLOCK2</h2>\n                    <div className=\"block\">\n                        {ifsSig.map(ifs => (\n                            <p key={Math.random()} className=\"chSig\" style={ifs + 16 === props.chNumber ? { background: \"red\" } : {}} >{ifs}</p>\n                        ))}\n                    </div>\n                </div>\n                <div>\n                    <h2 className=\"blockName\">BLOCK3</h2>\n                    <div className=\"block\">\n                        {ifsSig.map(ifs => (\n                            <p key={Math.random()} className=\"chSig\" style={ifs + 32 === props.chNumber ? { background: \"red\" } : {}} >{ifs}</p>\n                        ))}\n                    </div>\n                </div>\n\n                <div>\n                    <h2 className=\"blockName\">BLOCK4</h2>\n                    <div className=\"block\">\n                        {ifsSig.map(ifs => (\n                            <p key={Math.random()} className=\"chSig\" style={ifs + 48 === props.chNumber ? { background: \"red\" } : {}} >{ifs}</p>\n                        ))}\n                    </div>\n                </div>\n                <div>\n                    <h2 className=\"blockName\">BLOCK5</h2>\n                    <div className=\"block\">\n                        {ifsSig.map(ifs => (\n                            <p key={Math.random()} className=\"chSig\" style={ifs + 64 === props.chNumber ? { background: \"red\" } : {}} >{ifs}</p>\n                        ))}\n                    </div>\n                </div>\n                <div>\n                    <h2 className=\"blockName\">BLOCK6</h2>\n                    <div className=\"block\">\n                        {ifsSig.map(ifs => (\n                            <p key={Math.random()} className=\"chSig\" style={ifs + 80 === props.chNumber ? { background: \"red\" } : {}} >{ifs}</p>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react'\n\nexport default function Lhsd(props) {\n    const ifsLhsd = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    return (\n        <div>\n            <h1>LhsdType</h1>\n            <div className=\"if Lhsd\" >\n                <div >\n                    <h2 className=\"blockName\">BLOCK1</h2>\n                    <div className=\"block\">\n                        {ifsLhsd.map(ifs => (\n                            <p key={Math.random()} className=\"chLhsd\" style={ifs === props.chNumber ? { background: \"red\" } : {}} >{ifs}</p>\n                        ))}\n                    </div>\n                </div>\n                <div >\n                    <h2 className=\"blockName\">BLOCK2</h2>\n                    <div className=\"block\">\n                        {ifsLhsd.map(ifs => (\n                            <p key={Math.random()} className=\"chLhsd\" style={ifs + 16 === props.chNumber ? { background: \"red\" } : {}} >{ifs}</p>\n                        ))}\n                    </div>\n                </div>\n                <div>\n                    <h2 className=\"blockName\">BLOCK3</h2>\n                    <div className=\"block\">\n                        {ifsLhsd.map(ifs => (\n                            <p key={Math.random()} className=\"chLhsd\" style={ifs + 32 === props.chNumber ? { background: \"red\" } : {}} >{ifs}</p>\n                        ))}\n                    </div>\n                </div>\n\n                <div>\n                    <h2 className=\"blockName\">BLOCK4</h2>\n                    <div className=\"block\">\n                        {ifsLhsd.map(ifs => (\n                            <p key={Math.random()} className=\"chLhsd\" style={ifs + 48 === props.chNumber ? { background: \"red\" } : {}} >{ifs}</p>\n                        ))}\n                    </div>\n                </div>\n                <div>\n                    <h2 className=\"blockName\">BLOCK5</h2>\n                    <div className=\"block\">\n                        {ifsLhsd.map(ifs => (\n                            <p key={Math.random()} className=\"chLhsd\" style={ifs + 64 === props.chNumber ? { background: \"red\" } : {}} >{ifs}</p>\n                        ))}\n                    </div>\n                </div>\n                <div>\n                    <h2 className=\"blockName\">BLOCK6</h2>\n                    <div className=\"block\">\n                        {ifsLhsd.map(ifs => (\n                            <p key={Math.random()} className=\"chLhsd\" style={ifs + 80 === props.chNumber ? { background: \"red\" } : {}} >{ifs}</p>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </div >\n    )\n}","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './assets/styles/App.css';\nimport {  Boadm, Dsm, Pages, Ptm, Pts, Top } from './components/index'\n\nexport default function App() {\n\n  return (\n    <Router>\n      <div>\n        <Pages /><hr />\n        <Route exact path='/home' component={Top} />\n        <Route exact path='/dsm' component={Dsm} />\n        <Route exact path='/boadm' component={Boadm} />\n        <Route exact path='/pts' component={Pts} />\n        <Route exact path='/ptm' component={Ptm} />\n        <hr />\n      </div>\n    </Router>\n  );\n  \n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}